// source: proto/unit_manager_unit.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.unit_management.v1.ConnectionState', null, global);
goog.exportSymbol('proto.unit_management.v1.OrderBy', null, global);
goog.exportSymbol('proto.unit_management.v1.Unit', null, global);
goog.exportSymbol('proto.unit_management.v1.UnitsRequest', null, global);
goog.exportSymbol('proto.unit_management.v1.UnitsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unit_management.v1.Unit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unit_management.v1.Unit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unit_management.v1.Unit.displayName = 'proto.unit_management.v1.Unit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unit_management.v1.UnitsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.unit_management.v1.UnitsRequest.repeatedFields_, null);
};
goog.inherits(proto.unit_management.v1.UnitsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unit_management.v1.UnitsRequest.displayName = 'proto.unit_management.v1.UnitsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unit_management.v1.UnitsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.unit_management.v1.UnitsResponse.repeatedFields_, null);
};
goog.inherits(proto.unit_management.v1.UnitsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unit_management.v1.UnitsResponse.displayName = 'proto.unit_management.v1.UnitsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unit_management.v1.Unit.prototype.toObject = function(opt_includeInstance) {
  return proto.unit_management.v1.Unit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unit_management.v1.Unit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unit_management.v1.Unit.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 3, ""),
    plateNumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    connectionState: jspb.Message.getFieldWithDefault(msg, 5, 0),
    simNumber: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isArchive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    deviceType: jspb.Message.getFieldWithDefault(msg, 8, ""),
    imei: jspb.Message.getFieldWithDefault(msg, 9, ""),
    lastPointTime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unit_management.v1.Unit}
 */
proto.unit_management.v1.Unit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unit_management.v1.Unit;
  return proto.unit_management.v1.Unit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unit_management.v1.Unit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unit_management.v1.Unit}
 */
proto.unit_management.v1.Unit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlateNumber(value);
      break;
    case 5:
      var value = /** @type {!proto.unit_management.v1.ConnectionState} */ (reader.readEnum());
      msg.setConnectionState(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSimNumber(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsArchive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setImei(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastPointTime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unit_management.v1.Unit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unit_management.v1.Unit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unit_management.v1.Unit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unit_management.v1.Unit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPlateNumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConnectionState();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getSimNumber();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsArchive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getDeviceType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getImei();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLastPointTime();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.unit_management.v1.Unit.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.unit_management.v1.Unit.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string icon = 3;
 * @return {string}
 */
proto.unit_management.v1.Unit.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string plate_number = 4;
 * @return {string}
 */
proto.unit_management.v1.Unit.prototype.getPlateNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setPlateNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ConnectionState connection_state = 5;
 * @return {!proto.unit_management.v1.ConnectionState}
 */
proto.unit_management.v1.Unit.prototype.getConnectionState = function() {
  return /** @type {!proto.unit_management.v1.ConnectionState} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.unit_management.v1.ConnectionState} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setConnectionState = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string sim_number = 6;
 * @return {string}
 */
proto.unit_management.v1.Unit.prototype.getSimNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setSimNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_archive = 7;
 * @return {boolean}
 */
proto.unit_management.v1.Unit.prototype.getIsArchive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setIsArchive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string device_type = 8;
 * @return {string}
 */
proto.unit_management.v1.Unit.prototype.getDeviceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setDeviceType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string imei = 9;
 * @return {string}
 */
proto.unit_management.v1.Unit.prototype.getImei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setImei = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint32 last_point_time = 10;
 * @return {number}
 */
proto.unit_management.v1.Unit.prototype.getLastPointTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setLastPointTime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 created_at = 11;
 * @return {number}
 */
proto.unit_management.v1.Unit.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.unit_management.v1.Unit} returns this
 */
proto.unit_management.v1.Unit.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.unit_management.v1.UnitsRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unit_management.v1.UnitsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.unit_management.v1.UnitsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unit_management.v1.UnitsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unit_management.v1.UnitsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    queryFilter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    orderBysList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unit_management.v1.UnitsRequest}
 */
proto.unit_management.v1.UnitsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unit_management.v1.UnitsRequest;
  return proto.unit_management.v1.UnitsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unit_management.v1.UnitsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unit_management.v1.UnitsRequest}
 */
proto.unit_management.v1.UnitsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryFilter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    case 4:
      var values = /** @type {!Array<!proto.unit_management.v1.OrderBy>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addOrderBys(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unit_management.v1.UnitsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unit_management.v1.UnitsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unit_management.v1.UnitsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unit_management.v1.UnitsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getQueryFilter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getOrderBysList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
};


/**
 * optional uint32 limit = 1;
 * @return {number}
 */
proto.unit_management.v1.UnitsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.unit_management.v1.UnitsRequest} returns this
 */
proto.unit_management.v1.UnitsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string query_filter = 2;
 * @return {string}
 */
proto.unit_management.v1.UnitsRequest.prototype.getQueryFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.unit_management.v1.UnitsRequest} returns this
 */
proto.unit_management.v1.UnitsRequest.prototype.setQueryFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 offset = 3;
 * @return {number}
 */
proto.unit_management.v1.UnitsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.unit_management.v1.UnitsRequest} returns this
 */
proto.unit_management.v1.UnitsRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated OrderBy order_bys = 4;
 * @return {!Array<!proto.unit_management.v1.OrderBy>}
 */
proto.unit_management.v1.UnitsRequest.prototype.getOrderBysList = function() {
  return /** @type {!Array<!proto.unit_management.v1.OrderBy>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.unit_management.v1.OrderBy>} value
 * @return {!proto.unit_management.v1.UnitsRequest} returns this
 */
proto.unit_management.v1.UnitsRequest.prototype.setOrderBysList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.unit_management.v1.OrderBy} value
 * @param {number=} opt_index
 * @return {!proto.unit_management.v1.UnitsRequest} returns this
 */
proto.unit_management.v1.UnitsRequest.prototype.addOrderBys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.unit_management.v1.UnitsRequest} returns this
 */
proto.unit_management.v1.UnitsRequest.prototype.clearOrderBysList = function() {
  return this.setOrderBysList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.unit_management.v1.UnitsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unit_management.v1.UnitsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.unit_management.v1.UnitsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unit_management.v1.UnitsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unit_management.v1.UnitsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    unitsList: jspb.Message.toObjectList(msg.getUnitsList(),
    proto.unit_management.v1.Unit.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unit_management.v1.UnitsResponse}
 */
proto.unit_management.v1.UnitsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unit_management.v1.UnitsResponse;
  return proto.unit_management.v1.UnitsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unit_management.v1.UnitsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unit_management.v1.UnitsResponse}
 */
proto.unit_management.v1.UnitsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    case 2:
      var value = new proto.unit_management.v1.Unit;
      reader.readMessage(value,proto.unit_management.v1.Unit.deserializeBinaryFromReader);
      msg.addUnits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unit_management.v1.UnitsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unit_management.v1.UnitsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unit_management.v1.UnitsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unit_management.v1.UnitsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getUnitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.unit_management.v1.Unit.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 total_count = 1;
 * @return {number}
 */
proto.unit_management.v1.UnitsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.unit_management.v1.UnitsResponse} returns this
 */
proto.unit_management.v1.UnitsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Unit units = 2;
 * @return {!Array<!proto.unit_management.v1.Unit>}
 */
proto.unit_management.v1.UnitsResponse.prototype.getUnitsList = function() {
  return /** @type{!Array<!proto.unit_management.v1.Unit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.unit_management.v1.Unit, 2));
};


/**
 * @param {!Array<!proto.unit_management.v1.Unit>} value
 * @return {!proto.unit_management.v1.UnitsResponse} returns this
*/
proto.unit_management.v1.UnitsResponse.prototype.setUnitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.unit_management.v1.Unit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.unit_management.v1.Unit}
 */
proto.unit_management.v1.UnitsResponse.prototype.addUnits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.unit_management.v1.Unit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.unit_management.v1.UnitsResponse} returns this
 */
proto.unit_management.v1.UnitsResponse.prototype.clearUnitsList = function() {
  return this.setUnitsList([]);
};


/**
 * @enum {number}
 */
proto.unit_management.v1.OrderBy = {
  ASCENDING: 0,
  DESCENDING: 1
};

/**
 * @enum {number}
 */
proto.unit_management.v1.ConnectionState = {
  CONNECTION_STATE_INIT: 0,
  CONNECTION_STATE_MESSAGE_SENT: 1,
  CONNECTION_STATE_MESSAGE_DELIVERED: 2,
  CONNECTION_STATE_DEVICE_CONNECTED: 3,
  CONNECTION_STATE_DEVICE_CONFIG_SET: 4,
  CONNECTION_STATE_DEVICE_FAILED: 5
};

goog.object.extend(exports, proto.unit_management.v1);
